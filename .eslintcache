[{"E:\\food-delivery-admin\\src\\index.js":"1","E:\\food-delivery-admin\\src\\reportWebVitals.js":"2","E:\\food-delivery-admin\\src\\App.js":"3","E:\\food-delivery-admin\\src\\Components\\Login\\Login.js":"4","E:\\food-delivery-admin\\src\\Firebase\\FirebaseConfig.js":"5","E:\\food-delivery-admin\\src\\Components\\Orders\\Orders.js":"6","E:\\food-delivery-admin\\src\\Components\\Sidebar\\Sidebar.js":"7","E:\\food-delivery-admin\\src\\Components\\Orders\\Order.js":"8","E:\\food-delivery-admin\\src\\Components\\Restaurants\\Restaurants.js":"9","E:\\food-delivery-admin\\src\\Components\\Common\\Spinner.js":"10","E:\\food-delivery-admin\\src\\Components\\Restaurants\\Restaurant.js":"11","E:\\food-delivery-admin\\src\\Components\\Common\\Rating.js":"12","E:\\food-delivery-admin\\src\\Components\\Restaurants\\AddRestaurant.js":"13","E:\\food-delivery-admin\\src\\Components\\Common\\Input.js":"14","E:\\food-delivery-admin\\src\\Components\\Common\\Map.js":"15","E:\\food-delivery-admin\\src\\Components\\Restaurants\\EditRestaurant.js":"16","E:\\food-delivery-admin\\src\\Components\\Common\\Firebase.js":"17","E:\\food-delivery-admin\\src\\Components\\Dishes\\Dishes.js":"18","E:\\food-delivery-admin\\src\\Components\\Dishes\\Dish.js":"19","E:\\food-delivery-admin\\src\\Components\\Categories\\Categories.js":"20","E:\\food-delivery-admin\\src\\Components\\Dishes\\AddDish.js":"21","E:\\food-delivery-admin\\src\\Components\\Dishes\\EditDish.js":"22","E:\\food-delivery-admin\\src\\Components\\Dashboard\\Dashboard.js":"23","E:\\food-delivery-admin\\src\\Components\\Notifications\\Notifications.js":"24","E:\\food-delivery-admin\\src\\Components\\RestaurantOwners\\RestaurantOwners.js":"25","E:\\food-delivery-admin\\src\\Components\\RestaurantOwners\\AddRestaurantOwner.js":"26"},{"size":500,"mtime":499162500000,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":3347,"mtime":1612725748854,"results":"30","hashOfConfig":"28"},{"size":2690,"mtime":1612654510420,"results":"31","hashOfConfig":"28"},{"size":786,"mtime":1612721756680,"results":"32","hashOfConfig":"28"},{"size":4582,"mtime":1611858906546,"results":"33","hashOfConfig":"28"},{"size":3272,"mtime":1612691280116,"results":"34","hashOfConfig":"28"},{"size":4405,"mtime":1611856468568,"results":"35","hashOfConfig":"28"},{"size":5009,"mtime":1612308204985,"results":"36","hashOfConfig":"28"},{"size":512,"mtime":1611856309368,"results":"37","hashOfConfig":"28"},{"size":6607,"mtime":1611868616324,"results":"38","hashOfConfig":"28"},{"size":704,"mtime":1611860202936,"results":"39","hashOfConfig":"28"},{"size":8377,"mtime":1612380003967,"results":"40","hashOfConfig":"28"},{"size":470,"mtime":1611873418722,"results":"41","hashOfConfig":"28"},{"size":1775,"mtime":1611979948451,"results":"42","hashOfConfig":"28"},{"size":8748,"mtime":1612379954205,"results":"43","hashOfConfig":"28"},{"size":6106,"mtime":1612386385264,"results":"44","hashOfConfig":"28"},{"size":5478,"mtime":1612306433117,"results":"45","hashOfConfig":"28"},{"size":5375,"mtime":1612118929693,"results":"46","hashOfConfig":"28"},{"size":3336,"mtime":1612050461648,"results":"47","hashOfConfig":"28"},{"size":8618,"mtime":1612119965259,"results":"48","hashOfConfig":"28"},{"size":9788,"mtime":1612120532231,"results":"49","hashOfConfig":"28"},{"size":4657,"mtime":1612641675646,"results":"50","hashOfConfig":"28"},{"size":950,"mtime":1612688636242,"results":"51","hashOfConfig":"28"},{"size":3781,"mtime":1612389982544,"results":"52","hashOfConfig":"28"},{"size":5878,"mtime":1612386132958,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"h7det1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"56"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"56"},"E:\\food-delivery-admin\\src\\index.js",[],["124","125"],"E:\\food-delivery-admin\\src\\reportWebVitals.js",[],"E:\\food-delivery-admin\\src\\App.js",[],"E:\\food-delivery-admin\\src\\Components\\Login\\Login.js",["126","127","128"],"import React, { Component } from \"react\";\r\nimport Logo from \"../../Assets/logo.png\";\r\nimport emailIcon from \"../../Assets/Icons/email.png\";\r\nimport passwordIcon from \"../../Assets/Icons/pass.png\";\r\nimport { auth, firestore } from \"../../Firebase/FirebaseConfig\";\r\nclass Login extends Component {\r\n  state = { email: \"\", password: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  login = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((res) => {\r\n        firestore\r\n          .collection(\"super_admin\")\r\n          .doc(res.user.uid)\r\n          .get()\r\n          .then((snapshot) => {\r\n            localStorage.setItem(\"admin\", JSON.stringify(snapshot.data()));\r\n            window.location.reload(\"/\");\r\n          })\r\n          .catch((err) => {\r\n            alert(err.message);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container \">\r\n          <div className=\"logo\">\r\n            <img src={Logo}></img>\r\n          </div>\r\n\r\n          <form className=\"loginAdmin\">\r\n            <h1>Admin Login</h1>\r\n            <div class=\"input-group my-4\">\r\n              <span>\r\n                <img src={emailIcon} />\r\n              </span>\r\n              <div class=\"input-group-inner\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email ID</label>\r\n                <input\r\n                  name=\"email\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  value={this.state.email}\r\n                  type=\"email\"\r\n                  id=\"exampleInputEmail1\"\r\n                  placeholder=\"youremail@gmail.com\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"input-group my-3\">\r\n              <span>\r\n                <img src={passwordIcon} />\r\n              </span>\r\n              <div class=\"input-group-inner\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  onChange={(e) => this.handleChange(e)}\r\n                  value={this.state.password}\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"********\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              onClick={this.login}\r\n              type=\"button\"\r\n              className=\"btn btn-login btn-block\"\r\n            >\r\n              Login\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","E:\\food-delivery-admin\\src\\Firebase\\FirebaseConfig.js",[],"E:\\food-delivery-admin\\src\\Components\\Orders\\Orders.js",["129","130"],"import React, { Component } from \"react\";\r\nimport { firestore } from \"../../Firebase/FirebaseConfig\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"../Common/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  state = { orders: [], restaurents: [], restaurent: null, loading: true };\r\n\r\n  componentDidMount() {\r\n    firestore\r\n      .collection(\"orders\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.docs.length > 0) {\r\n          let orders = [];\r\n          snapshot.docs.map((order) => {\r\n            orders.push({ uid: order.id, ...order.data() });\r\n          });\r\n          this.setState({ orders });\r\n        }\r\n        firestore\r\n          .collection(\"restaurants\")\r\n          .get()\r\n          .then((snapshot) => {\r\n          \r\n              let restaurents = [];\r\n              snapshot.docs.map((rest) => {\r\n                restaurents.push({ uid: rest.id, ...rest.data() });\r\n              });\r\n              this.setState({ restaurents, loading: false });\r\n            \r\n          })\r\n          .catch((err) => {\r\n            this.setState({ loading: false });\r\n            alert(err.message);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n        alert(err.message);\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      restaurent: e.target.value,\r\n    });\r\n  };\r\n\r\n  orderClicked = (id) => {\r\n    this.props.history.push(`/order/${id}`);\r\n  };\r\n  render() {\r\n    const { orders: allOrders, restaurent,loading } = this.state;\r\n\r\n    let filterdOrders = allOrders;\r\n    if (restaurent) {\r\n      filterdOrders = allOrders.filter(\r\n        (order) => order.restaurant_id === restaurent\r\n      );\r\n    }\r\n    return (\r\n      <Sidebar>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className=\"orders__list mb-5\">\r\n            <div className=\"form-group row mt-3 px-2\">\r\n              <label\r\n                htmlFor=\"inputPassword\"\r\n                className=\"col-sm-2 col-form-label\"\r\n              >\r\n                Select Resturant:\r\n              </label>\r\n              <div className=\"col-sm-10\">\r\n                <select\r\n                  name=\"restaurent\"\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control\"\r\n                >\r\n                  {\" \"}\r\n                  <option>Search Restaurant</option>\r\n                  {this.state.restaurents.map((e) => (\r\n                    <option value={e.uid}>{e.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            {filterdOrders.map((order) => {\r\n              return (\r\n                <div\r\n                  className=\"orders__list__item\"\r\n                  onClick={() => this.orderClicked(order.uid)}\r\n                >\r\n                  <div className=\"row justify-content-between\">\r\n                    <div>\r\n                      Order ID #{\" \"}\r\n                      <span className=\"strong\">\r\n                        {order.uid.substring(0, 4)}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      Price: ${\" \"}\r\n                      <span className=\"strong\">{order.total_price}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row justify-content-between\">\r\n                    <div>\r\n                      Time <span className=\"strong\">{order.time}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"strong\">{order.delivery_type}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div>\r\n                      Customer Name:{\" \"}\r\n                      <span className=\"strong\">{order.customer_name}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div>\r\n                      <i className=\"fa fa-map-marker-alt pr-2\"></i>\r\n                      <span className=\"strong\">{order.address}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div>\r\n                      Status: <span className=\"strong\">{order.status}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Orders);\r\n","E:\\food-delivery-admin\\src\\Components\\Sidebar\\Sidebar.js",["131","132","133","134"],"import React, { Component } from \"react\";\r\nimport logo from \"../../Assets/logo.png\";\r\nimport home from \"../../Assets/Icons/home.png\";\r\nimport food from \"../../Assets/Icons/food.svg\";\r\nimport { Link, withRouter, NavLink } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  logout = () => {\r\n    localStorage.removeItem(\"admin\");\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar__container\">\r\n        <div className=\"nav_icon\">\r\n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n        </div>\r\n\r\n        <main className=\"main-section\">{this.props.children}</main>\r\n\r\n        <div id=\"sidebar\">\r\n          <div className=\"sidebar__title\">\r\n            <div className=\"sidebar__img\">\r\n              <Link to=\"/vendor/\" className=\"link\">\r\n                <img src={logo}></img>\r\n\r\n                <h3>Food Delivery </h3>\r\n              </Link>\r\n            </div>\r\n            <i className=\"fa fa-times\" id=\"sidebarIcon\" aria-hidden=\"true\"></i>\r\n          </div>\r\n\r\n          <div className=\"sidebar__menu\">\r\n            <NavLink\r\n              className=\"sidebar__link\"\r\n              to=\"/\"\r\n              activeClassName=\"active_menu_link\"\r\n              exact\r\n            >\r\n              <img src={home} />\r\n              Dashboard\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"sidebar__link\"\r\n              to=\"/restaurant-owners\"\r\n              activeClassName=\"active_menu_link\"\r\n              exact\r\n            >\r\n              <i className=\"fa fa-user\"></i>\r\n              Restaurant Owners\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"sidebar__link\"\r\n              to=\"/orders\"\r\n              activeClassName=\"active_menu_link\"\r\n              exact\r\n            >\r\n              <img src={food} />\r\n              Orders\r\n            </NavLink>\r\n\r\n            <NavLink\r\n              className=\"sidebar__link\"\r\n              to=\"/restaurants\"\r\n              activeClassName=\"active_menu_link\"\r\n              exact\r\n            >\r\n              <i className=\"fa fa-utensils\"></i>\r\n              Resturants\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"sidebar__link\"\r\n              to=\"/dishes\"\r\n              activeClassName=\"active_menu_link\"\r\n              exact\r\n            >\r\n              <i className=\"fa fa-check-circle\"></i>\r\n              Dishes\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"sidebar__link\"\r\n              to=\"/categories\"\r\n              activeClassName=\"active_menu_link\"\r\n              exact\r\n            >\r\n              <i className=\"fa fa-list\"></i>\r\n              Categories\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"sidebar__link\"\r\n              to=\"/notifications\"\r\n              activeClassName=\"active_menu_link\"\r\n              exact\r\n            >\r\n              <i className=\"fa fa-bell\"></i>\r\n              Notifications\r\n            </NavLink>\r\n\r\n            <div className=\"sidebar__logout\" onClick={this.logout}>\r\n              <i className=\"fa fa-sign-out-alt\"></i>\r\n              <span>Logout</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","E:\\food-delivery-admin\\src\\Components\\Orders\\Order.js",["135","136"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { firestore } from \"../../Firebase/FirebaseConfig\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nclass Order extends Component {\r\n  state = { order: null, loading: true };\r\n\r\n  componentDidMount() {\r\n    firestore\r\n      .collection(\"orders\")\r\n      .doc(this.props.match.params.id)\r\n      .get()\r\n      .then((snapshot) => {\r\n        this.setState({\r\n          order: { uid: snapshot.id, ...snapshot.data() },\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n        alert(err.message);\r\n      });\r\n  }\r\n\r\n  getsubtotal = (dishes) => {\r\n    let subttoal = 0;\r\n    dishes.map((dish) => {\r\n      subttoal = subttoal + parseInt(dish.price) * parseInt(dish.quantity);\r\n    });\r\n    return subttoal;\r\n  };\r\n  render() {\r\n    const { order, loading } = this.state;\r\n    return (\r\n      <Sidebar>\r\n        {!loading ? (\r\n          <div>\r\n            <div className=\"orders__list__item\">\r\n              <div className=\"row justify-content-between\">\r\n                <div>\r\n                  Order ID #{\" \"}\r\n                  <span className=\"strong\">{order.uid.substring(0, 4)}</span>\r\n                </div>\r\n                <div>\r\n                  Price: $ <span className=\"strong\">{order.total_price}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"row justify-content-between\">\r\n                <div>\r\n                  Time <span className=\"strong\">{order.time}</span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"strong\">{order.delivery_type}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div>\r\n                  Distance: <span className=\"strong\">{order.distance}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div>\r\n                  <i className=\"fa fa-map-marker-alt pr-2\"></i>\r\n                  <span className=\"strong\">{order.address}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row my-1 mx-3 justify-content-between\">\r\n              <div>\r\n                Status: <span className=\"strong\">{order.status}</span>\r\n              </div>\r\n              <div>\r\n                Driver: <span className=\"strong\">{order.driver_name}</span>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"row my-1 mx-3 justify-content-between\">\r\n              <div>\r\n                Customer Name:{\" \"}\r\n                <span className=\"strong\">{order.customer_name}</span>\r\n              </div>\r\n              <div>\r\n                Customer Phone:{\" \"}\r\n                <span className=\"strong\">{order.customer_phone}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {order.order_dishes.length > 0 && (\r\n              <div className=\"orders__list__item\">\r\n                <h4>Order Details</h4>\r\n                {order.order_dishes.map((dish) => {\r\n                  return (\r\n                    <div className=\"row justify-content-between my-2\">\r\n                      <div className=\"dish__image\">\r\n                        <img src={dish.image} />\r\n                      </div>\r\n                      <div>\r\n                        <p>{dish.name}</p>\r\n                        <p>\r\n                          $ {dish.price} x {dish.quantity} ={\" $\"}\r\n                          {parseInt(dish.price) * parseInt(dish.quantity)}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n                <div className=\"row justify-content-between my-2\">\r\n                  <div></div>\r\n                  <div>\r\n                    <p>SubTotal: ${this.getsubtotal(order.order_dishes)}</p>\r\n                    <p>Shipping cost: $ 20</p>\r\n                    <p className=\"font-weight-bold\">\r\n                      Total: ${this.getsubtotal(order.order_dishes) + 20}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Order);\r\n","E:\\food-delivery-admin\\src\\Components\\Restaurants\\Restaurants.js",["137","138"],"import React, { Component } from \"react\";\r\nimport { firestore } from \"../../Firebase/FirebaseConfig\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport { deleteRestaurant, getRestaurantUserReviews } from \"../Common/Firebase\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nclass Restaurants extends Component {\r\n  state = { restaurents: [], loading: true, lastRestaurant: 0 };\r\n\r\n  async componentDidMount() {\r\n    firestore\r\n      .collection(\"restaurants\")\r\n      .limit(5)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.docs.length > 0) {\r\n          let restaurents = [];\r\n          snapshot.docs.map(async (rest) => {\r\n            restaurents.push({ uid: rest.id, ...rest.data() });\r\n          });\r\n          const lastRestaurant = snapshot.docs[snapshot.docs.length - 1];\r\n          this.setState({ restaurents, loading: false, lastRestaurant });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n        alert(err.message);\r\n      });\r\n  }\r\n\r\n  restaurantClicked = (id) => {\r\n    this.props.history.push(`/restaurant/${id}`);\r\n  };\r\n\r\n  editRestaurant = (id) => {\r\n    this.props.history.push(`/edit_restaurant/${id}`);\r\n  };\r\n\r\n  delete = async (id) => {\r\n    try {\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      await deleteRestaurant(id);\r\n      const restaurents = this.state.restaurents.filter(\r\n        (rest) => rest.restaurant_id !== id\r\n      );\r\n      this.setState({\r\n        loading: false,\r\n        restaurents,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  fetchMore = () => {\r\n    firestore\r\n      .collection(\"restaurants\")\r\n      .startAfter(this.state.lastRestaurant)\r\n      .limit(5)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.docs.length > 0) {\r\n          let restaurents = [];\r\n          snapshot.docs.map(async (rest) => {\r\n            restaurents.push({ uid: rest.id, ...rest.data() });\r\n          });\r\n          const lastRestaurant = snapshot.docs[snapshot.docs.length - 1];\r\n          const oldRestaurants = [...this.state.restaurents];\r\n          this.setState({\r\n            restaurents: [...oldRestaurants, ...restaurents],\r\n            loading: false,\r\n            lastRestaurant,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n        alert(err.message);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Sidebar>\r\n        {this.state.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <button className=\"add__restaurant__button\">\r\n              <Link to=\"/restaurants/add\">Add Restaurant</Link>\r\n            </button>\r\n            {this.state.restaurents.map((restaurant) => {\r\n              return (\r\n                <div key={restaurant.uid} className=\"restaurant__list__item\">\r\n                  <span onClick={() => this.restaurantClicked(restaurant.uid)}>\r\n                    <img src={restaurant.image} />\r\n\r\n                    <div className=\"row justify-content-between px-4 mb-3 mt-1\">\r\n                      <h3 className=\"pl-1 pt-1\">{restaurant.name}</h3>\r\n                      <button\r\n                        className={\r\n                          restaurant.status\r\n                            ? \"success__status\"\r\n                            : \"danger__status\"\r\n                        }\r\n                      >\r\n                        {restaurant.status ? \"Enabled\" : \"Disabled\"}\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"row justify-content-between px-4\">\r\n                      <div>\r\n                        <p>{restaurant.address}</p>\r\n                        <p>{restaurant.mobile_phone}</p>\r\n                      </div>\r\n                      <div></div>\r\n                    </div>\r\n                  </span>\r\n\r\n                  <div className=\"row justify-content-between px-4 mb-3 mt-1\">\r\n                    <button className=\"btn btn-primary\">Dishes List</button>\r\n                    <button\r\n                      className=\"btn btn-success\"\r\n                      onClick={() => this.editRestaurant(restaurant.uid)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => this.delete(restaurant.uid)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            <div className=\"text-center my-3 pb-5\">\r\n              <button onClick={this.fetchMore} className=\"btn btn-primary px-5\">\r\n                More Restaurants\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Restaurants);\r\n","E:\\food-delivery-admin\\src\\Components\\Common\\Spinner.js",[],"E:\\food-delivery-admin\\src\\Components\\Restaurants\\Restaurant.js",["139","140","141","142","143"],"import React, { Component } from \"react\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport { firestore } from \"../../Firebase/FirebaseConfig\";\r\nimport Rating from \"../Common/Rating\";\r\n\r\nclass Restaurant extends Component {\r\n  state = { restaurant: null, loading: true, user_reviews: [], dishes: [] };\r\n  componentDidMount() {\r\n    firestore\r\n      .collection(\"restaurants\")\r\n      .doc(this.props.match.params.id)\r\n      .get()\r\n      .then((snapshot) => {\r\n        this.setState({\r\n          restaurant: { uid: snapshot.id, ...snapshot.data() },\r\n        });\r\n        firestore\r\n          .collection(\"restaurant_reviews\")\r\n          .doc(snapshot.id)\r\n          .collection(\"user_reviews\")\r\n          .get()\r\n          .then((snapshot) => {\r\n            let reviews = [];\r\n            snapshot.docs.map((rev) => {\r\n              reviews.push({ uid: rev.id, ...rev.data() });\r\n            });\r\n            this.setState({ user_reviews: reviews });\r\n          })\r\n          .catch((err) => {\r\n            this.setState({ loading: false });\r\n            alert(err.message);\r\n          });\r\n\r\n        firestore\r\n          .collection(\"dishes\")\r\n          .get()\r\n          .then((snapshot) => {\r\n            let dishes = [];\r\n            snapshot.docs.map((rev) => {\r\n              dishes.push({ uid: rev.id, ...rev.data() });\r\n            });\r\n            this.setState({ dishes, loading: false });\r\n          })\r\n          .catch((err) => {\r\n            this.setState({ loading: false });\r\n            alert(err.message);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n        alert(err.message);\r\n      });\r\n  }\r\n\r\n  getRating = () => {\r\n    let totalRating = 0;\r\n    let totalprdrating = 0;\r\n    const { user_reviews } = this.state;\r\n    user_reviews.length > 0 &&\r\n      user_reviews.map((rat, i) => {\r\n        totalprdrating = i + 1;\r\n        return (totalRating = totalRating + parseFloat(rat.stars));\r\n      });\r\n\r\n    if ((totalRating / totalprdrating).toString() === \"NaN\") {\r\n      return 0;\r\n    } else {\r\n      return totalRating / totalprdrating;\r\n    }\r\n  };\r\n\r\n  rendorDishses = (id) => {\r\n    const dishes = this.state.dishes.filter((dish) => dish.restaurant === id);\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        {dishes.length > 0 ? (\r\n          dishes.map((dish) => {\r\n            return (\r\n              <div className=\"col-sm-3\">\r\n                <div className=\"singal__dish\">\r\n                  <img src={dish.image} />\r\n\r\n                  <div className=\"d-flex justify-content-between align-items-center px-1\">\r\n                    <h5>{dish.name}</h5>\r\n                    <h5>$ {dish.price}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div className=\"col-12\">\r\n            <h5 className=\"d-flex justify-content-center align-items-center\">\r\n              <span>There is no dishes</span>\r\n            </h5>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  rendorReviewa = () => {\r\n    const { user_reviews } = this.state;\r\n    return user_reviews.length > 0 ? (\r\n      user_reviews.map((rev) => (\r\n        <div>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"singal__review\">\r\n              <div className=\"d-flex\">\r\n                <img src={rev.user_image} />\r\n                <h5 className=\"p-2 font-weight-bold\">{rev.user_name}</h5>\r\n              </div>\r\n\r\n              <p>{rev.review}</p>\r\n            </div>\r\n            <p>\r\n              <span className=\"badge badge-dark\">\r\n                {rev.stars} <i className=\"fa fa-star\"></i>\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <h5 className=\"d-flex justify-content-center align-items-center\">\r\n        <span>There is no reviews</span>\r\n      </h5>\r\n    );\r\n  };\r\n\r\n  restaurantStatusClicked = (status, id) => {\r\n    firestore\r\n      .collection(\"restaurants\")\r\n      .doc(id)\r\n      .update({ status: !status })\r\n      .then((res) => {\r\n        alert(\"Updated\")\r\n        const rest = { ...this.state.restaurant };\r\n        rest.status = !status;\r\n        this.setState({\r\n          restaurant: rest,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  };\r\n  render() {\r\n    const { loading, restaurant } = this.state;\r\n    return (\r\n      <Sidebar>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className=\"singal__restaurant mb-5\">\r\n            <img src={restaurant.image} />\r\n            <Rating productRating={this.getRating()} />\r\n            <div className=\"d-flex align-items-center\">\r\n              <i className=\"fa fa-utensils\" style={{ fontSize: \"25px\" }}></i>\r\n              <h3 className=\"pl-4 pt-2\">{restaurant.name}</h3>\r\n            </div>\r\n\r\n            <p>{restaurant.description}</p>\r\n\r\n            <div className=\"d-flex align-items-center  mt-5\">\r\n              <i className=\"fa fa-info-circle\" style={{ fontSize: \"25px\" }}></i>\r\n              <h3 className=\"pl-4 pt-1\">Information</h3>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"font-weight-bold\">Phone: {restaurant.phone}</h5>\r\n              <h5 className=\"font-weight-bold\">\r\n                Mobile Phone: {restaurant.mobile_phone}\r\n              </h5>\r\n            </div>\r\n\r\n            <button\r\n              className={\r\n                restaurant.status ? \"success__status\" : \"danger__status\"\r\n              }\r\n              onClick={() =>\r\n                this.restaurantStatusClicked(restaurant.status, restaurant.uid)\r\n              }\r\n            >\r\n              {restaurant.status ? \"Enabled\" : \"Disabled\"}\r\n            </button>\r\n\r\n            <div className=\"d-flex align-items-center mt-5\">\r\n              <i className=\"fa fa-star\" style={{ fontSize: \"25px\" }}></i>\r\n              <h3 className=\"pl-4 pt-1\">Dishes</h3>\r\n            </div>\r\n\r\n            {this.rendorDishses(restaurant.uid)}\r\n\r\n            <div className=\"d-flex align-items-center mt-5\">\r\n              <i\r\n                className=\"fa fa-star-half-alt\"\r\n                style={{ fontSize: \"25px\" }}\r\n              ></i>\r\n              <h3 className=\"pl-4 pt-1\">Reviews</h3>\r\n            </div>\r\n            {this.rendorReviewa()}\r\n          </div>\r\n        )}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Restaurant);\r\n","E:\\food-delivery-admin\\src\\Components\\Common\\Rating.js",[],"E:\\food-delivery-admin\\src\\Components\\Restaurants\\AddRestaurant.js",["144"],"import React, { Component } from \"react\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport profileImage from \"../../Assets/profileImage.png\";\r\nimport Input from \"../Common/Input\";\r\nimport Joi from \"joi\";\r\nimport Map from \"../Common/Map\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport { createRestaurant } from \"../Common/Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getRestaurantOwners } from \"./../Common/Firebase\";\r\n\r\nclass AddRestaurant extends Component {\r\n  state = {\r\n    loading: false,\r\n    image: null,\r\n    src: null,\r\n    name: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    mobile_phone: \"\",\r\n    latitude: 0,\r\n    longitude: 0,\r\n    description: \"\",\r\n    owner: \"\",\r\n    openModal: false,\r\n    restaurantOwners: [],\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const restaurantOwners = await getRestaurantOwners();\r\n      this.setState({\r\n        loading: false,\r\n        restaurantOwners,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      alert(error.message);\r\n    }\r\n  }\r\n  fileInputHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  restaurantSchema = {\r\n    name: Joi.string().required(),\r\n    address: Joi.string().required(),\r\n    phone: Joi.string().required(),\r\n    mobile_phone: Joi.string().required(),\r\n    description: Joi.string().required(),\r\n    owner: Joi.string().required(),\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const propertySchema = { [name]: this.restaurantSchema[name] };\r\n    const { error } = Joi.object(propertySchema).validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  inputHandler = (e) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(e.target);\r\n    if (errorMessage) {\r\n      errors[e.target.name] = errorMessage;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      errors,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    const {\r\n      name,\r\n      address,\r\n      phone,\r\n      mobile_phone,\r\n      description,\r\n      owner,\r\n    } = this.state;\r\n    const restaurantData = {\r\n      name,\r\n      address,\r\n      phone,\r\n      mobile_phone,\r\n      description,\r\n      owner,\r\n    };\r\n    const result = Joi.object(this.restaurantSchema).validate(restaurantData, {\r\n      abortEarly: false,\r\n    });\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  register = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    if (this.state.image === null) {\r\n      alert(\"Please select an image.\");\r\n    } else if (this.state.latitude === 0 || this.state.longitude === 0) {\r\n      alert(\"Please select location.\");\r\n    } else {\r\n      const {\r\n        src,\r\n        image,\r\n        name,\r\n        address,\r\n        phone,\r\n        mobile_phone,\r\n        latitude,\r\n        longitude,\r\n        description,\r\n        owner,\r\n      } = this.state;\r\n      try {\r\n        this.setState({ loading: true });\r\n        await createRestaurant(\r\n          src,\r\n          image,\r\n          name,\r\n          address,\r\n          phone,\r\n          mobile_phone,\r\n          latitude,\r\n          longitude,\r\n          description,\r\n          owner\r\n        );\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        this.props.history.push(\"/restaurants\");\r\n      } catch (error) {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  getCoords = (coords) => {\r\n    this.setState({ latitude: coords.lat, longitude: coords.lng });\r\n  };\r\n\r\n  setModal = () => {\r\n    this.setState({\r\n      openModal: !this.state.openModal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Sidebar>\r\n        <div>\r\n          {this.state.loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <div className=\"vendor-card\">\r\n              <div className=\"vendor-card-header\">\r\n                <h5>Add New Restaurant</h5>\r\n              </div>\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={this.state.src ? this.state.src : profileImage}\r\n                  ></img>\r\n                </div>\r\n                <div className=\"form-group mt-2\">\r\n                  <input\r\n                    className=\"btn btn-primary\"\r\n                    name=\"image\"\r\n                    accept=\"image/*\"\r\n                    onChange={this.fileInputHandler}\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row mt-3\">\r\n                <label\r\n                  htmlFor=\"inputPassword\"\r\n                  className=\"col-sm-2 col-form-label\"\r\n                >\r\n                  Select Owner:\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <select\r\n                    name=\"owner\"\r\n                    onChange={this.inputHandler}\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Select Restaurant Owner: </option>\r\n                    {this.state.restaurantOwners.map((e) => (\r\n                      <option value={e.user_id}>\r\n                        {e.first_name + \" \" + e.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <Input\r\n                name=\"name\"\r\n                label=\"Restaurant Name\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.name}\r\n                type=\"text\"\r\n                placeholder=\"Enter Restaurant Name\"\r\n              />\r\n              <Input\r\n                name=\"address\"\r\n                label=\"Address\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.address}\r\n                type=\"text\"\r\n                placeholder=\"Enter Restaurant Address\"\r\n              />\r\n              <Input\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.phone}\r\n                type=\"number\"\r\n                placeholder=\"Enter Restaurant Phone Number\"\r\n              />\r\n              <Input\r\n                name=\"mobile_phone\"\r\n                label=\"Mobile Number\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.mobile_phone}\r\n                type=\"number\"\r\n                placeholder=\"Enter Restaurant Mobile Number\"\r\n              />\r\n              <Input\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.description}\r\n                type=\"text\"\r\n                placeholder=\"Description\"\r\n              />\r\n\r\n              <div className=\"text-center my-2\">\r\n                <button onClick={this.setModal} className=\"btn btn-primary\">\r\n                  Select Location\r\n                </button>\r\n              </div>\r\n              <Modal open={this.state.openModal} onClose={this.setModal}>\r\n                <div style={{ width: \"700px\", marginTop: \"30px\" }}>\r\n                  <Map selectArea={(coords) => this.getCoords(coords)} />\r\n                </div>\r\n              </Modal>\r\n              <div className=\"btn-submit\">\r\n                <button onClick={this.register}>Save</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddRestaurant);\r\n","E:\\food-delivery-admin\\src\\Components\\Common\\Input.js",[],"E:\\food-delivery-admin\\src\\Components\\Common\\Map.js",[],["145","146"],"E:\\food-delivery-admin\\src\\Components\\Restaurants\\EditRestaurant.js",["147"],"import React, { Component } from \"react\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport profileImage from \"../../Assets/profileImage.png\";\r\nimport Input from \"../Common/Input\";\r\nimport Joi from \"joi\";\r\nimport Map from \"../Common/Map\";\r\nimport { firestore } from \"../../Firebase/FirebaseConfig\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport { editRestaurant } from \"../Common/Firebase\";\r\n\r\nclass EditRestaurant extends Component {\r\n  state = {\r\n    loading: false,\r\n    openModal: false,\r\n    data: {\r\n      id: \"\",\r\n      image: null,\r\n      src: null,\r\n      name: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      mobile_phone: \"\",\r\n      latitude: 0,\r\n      longitude: 0,\r\n      description: \"\",\r\n      owner: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const restaurant_id = this.props.match.params.id;\r\n    firestore\r\n      .collection(\"restaurants\")\r\n      .doc(restaurant_id)\r\n      .get()\r\n      .then((rest) => {\r\n        const restaurant = { ...this.state.data };\r\n        restaurant.id = rest.data().restaurant_id;\r\n        restaurant.src = rest.data().image;\r\n        restaurant.name = rest.data().name;\r\n        restaurant.address = rest.data().address;\r\n        restaurant.phone = rest.data().phone;\r\n        restaurant.mobile_phone = rest.data().mobile_phone;\r\n        restaurant.description = rest.data().description;\r\n        restaurant.owner = rest.data().owner;\r\n        restaurant.latitude = rest.data().latitude;\r\n        restaurant.longitude = rest.data().longitude;\r\n\r\n        this.setState({\r\n          data: restaurant,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  }\r\n\r\n  fileInputHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        const restaurant = { ...this.state.data };\r\n        restaurant.src = reader.result;\r\n        restaurant.image = e.target.files[0];\r\n        this.setState({ data: restaurant });\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  restaurantSchema = {\r\n    name: Joi.string().required(),\r\n    address: Joi.string().required(),\r\n    phone: Joi.string().required(),\r\n    mobile_phone: Joi.string().required(),\r\n    description: Joi.string().required(),\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const propertySchema = { [name]: this.restaurantSchema[name] };\r\n    const { error } = Joi.object(propertySchema).validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  inputHandler = (e) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(e.target);\r\n    if (errorMessage) {\r\n      errors[e.target.name] = errorMessage;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n    let restaurant = { ...this.state.data };\r\n    restaurant[e.target.name] = e.target.value;\r\n    this.setState({\r\n      data: restaurant,\r\n      errors,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    const { name, address, phone, mobile_phone, description } = this.state.data;\r\n    const restaurantData = {\r\n      name,\r\n      address,\r\n      phone,\r\n      mobile_phone,\r\n      description,\r\n    };\r\n    const result = Joi.object(this.restaurantSchema).validate(restaurantData, {\r\n      abortEarly: false,\r\n    });\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  register = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    if (this.state.data.image === null && this.state.data.src === null) {\r\n      alert(\"Please select an image.\");\r\n    } else if (\r\n      this.state.data.latitude === 0 ||\r\n      this.state.data.longitude === 0\r\n    ) {\r\n      alert(\"Please select location.\");\r\n    } else {\r\n      const {\r\n        id,\r\n        src,\r\n        image,\r\n        name,\r\n        address,\r\n        phone,\r\n        mobile_phone,\r\n        latitude,\r\n        longitude,\r\n        description,\r\n        owner,\r\n      } = this.state.data;\r\n      try {\r\n        this.setState({ loading: true });\r\n        await editRestaurant(\r\n          id,\r\n          src,\r\n          image,\r\n          name,\r\n          address,\r\n          phone,\r\n          mobile_phone,\r\n          latitude,\r\n          longitude,\r\n          description,\r\n          owner\r\n        );\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        this.props.history.push(\"/restaurants\");\r\n      } catch (error) {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  getCoords = (coords) => {\r\n    const data = { ...this.state.data };\r\n    data.latitude = coords.lat;\r\n    data.longitude = coords.lng;\r\n    this.setState({ data });\r\n  };\r\n\r\n  setModal = () => {\r\n    this.setState({\r\n      openModal: !this.state.openModal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Sidebar>\r\n        <div>\r\n          {this.state.loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <div className=\"vendor-card\">\r\n              <div className=\"vendor-card-header\">\r\n                <h5>Edit Restaurant</h5>\r\n              </div>\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={\r\n                      this.state.data.src ? this.state.data.src : profileImage\r\n                    }\r\n                  ></img>\r\n                </div>\r\n                <div className=\"form-group mt-2\">\r\n                  <input\r\n                    className=\"btn btn-primary\"\r\n                    name=\"image\"\r\n                    accept=\"image/*\"\r\n                    onChange={this.fileInputHandler}\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Input\r\n                name=\"name\"\r\n                label=\"Restaurant Name\"\r\n                onChange={this.inputHandler}\r\n                value={this.state.data.name}\r\n                error={this.state.errors.name}\r\n                type=\"text\"\r\n                placeholder=\"Enter Restaurant Name\"\r\n              />\r\n              <Input\r\n                name=\"address\"\r\n                label=\"Address\"\r\n                onChange={this.inputHandler}\r\n                value={this.state.data.address}\r\n                error={this.state.errors.address}\r\n                type=\"text\"\r\n                placeholder=\"Enter Restaurant Address\"\r\n              />\r\n              <Input\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                onChange={this.inputHandler}\r\n                value={this.state.data.phone}\r\n                error={this.state.errors.phone}\r\n                type=\"number\"\r\n                placeholder=\"Enter Restaurant Phone Number\"\r\n              />\r\n              <Input\r\n                name=\"mobile_phone\"\r\n                label=\"Mobile Number\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.mobile_phone}\r\n                value={this.state.data.mobile_phone}\r\n                type=\"number\"\r\n                placeholder=\"Enter Restaurant Mobile Number\"\r\n              />\r\n              <Input\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                onChange={this.inputHandler}\r\n                value={this.state.data.description}\r\n                error={this.state.errors.description}\r\n                type=\"text\"\r\n                placeholder=\"Description\"\r\n              />\r\n              <div className=\"text-center my-2\">\r\n                <button onClick={this.setModal} className=\"btn btn-primary\">\r\n                  Edit Location\r\n                </button>\r\n              </div>\r\n              <Modal open={this.state.openModal} onClose={this.setModal}>\r\n                <div style={{ width: \"700px\", marginTop: \"30px\" }}>\r\n                  <Map selectArea={(coords) => this.getCoords(coords)} />\r\n                </div>\r\n              </Modal>\r\n              <div className=\"btn-submit\">\r\n                <button onClick={this.register}>Save</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditRestaurant);\r\n","E:\\food-delivery-admin\\src\\Components\\Common\\Firebase.js",["148","149","150","151","152","153"],"import nextId from \"react-id-generator\";\r\nimport { storageRef, firestore, auth } from \"./../../Firebase/FirebaseConfig\";\r\nconst uploadRestaurantImage = async (image) => {\r\n  const uid = nextId();\r\n  const storageRefrence = storageRef.ref(\"/resturant_images\").child(\"/\" + uid);\r\n  const uploadedFile = await storageRefrence.put(image);\r\n\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst uploadDishImage = async (image) => {\r\n  const uid = nextId();\r\n  const storageRefrence = storageRef.ref(\"/dish_images\").child(\"/\" + uid);\r\n  const uploadedFile = await storageRefrence.put(image);\r\n\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst uploadRestaurantOwnerImage = async (image) => {\r\n  const uid = nextId();\r\n  const storageRefrence = storageRef.ref(\"/admin_profiles\").child(\"/\" + uid);\r\n  const uploadedFile = await storageRefrence.put(image);\r\n\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nexport const createRestaurant = async (\r\n  imageUrl,\r\n  imageFile,\r\n  name,\r\n  address,\r\n  phone,\r\n  mobile_phone,\r\n  latitude,\r\n  longitude,\r\n  description,\r\n  owner\r\n) => {\r\n  let image = imageUrl;\r\n  if (imageFile !== null) {\r\n    image = await uploadRestaurantImage(imageFile);\r\n  }\r\n  const documentRef = firestore.collection(\"restaurants\").doc();\r\n  const data = {\r\n    address,\r\n    description,\r\n    image,\r\n    latitude,\r\n    longitude,\r\n    mobile_phone,\r\n    name,\r\n    phone,\r\n    owner,\r\n    restaurant_id: documentRef.id,\r\n    status: true,\r\n  };\r\n\r\n  const restaurant = await documentRef.set(data);\r\n\r\n  return restaurant;\r\n};\r\n\r\nexport const editRestaurant = async (\r\n  id,\r\n  imageUrl,\r\n  imageFile,\r\n  name,\r\n  address,\r\n  phone,\r\n  mobile_phone,\r\n  latitude,\r\n  longitude,\r\n  description,\r\n  owner\r\n) => {\r\n  let image = imageUrl;\r\n  if (imageFile !== null) {\r\n    image = await uploadRestaurantImage(imageFile);\r\n  }\r\n  const documentRef = firestore.collection(\"restaurants\").doc(id);\r\n  const data = {\r\n    address,\r\n    description,\r\n    image,\r\n    latitude,\r\n    longitude,\r\n    mobile_phone,\r\n    name,\r\n    phone,\r\n    owner,\r\n    restaurant_id: documentRef.id,\r\n    status: true,\r\n  };\r\n  const restaurant = await documentRef.update(data);\r\n  return restaurant;\r\n};\r\n\r\nexport const deleteRestaurant = async (id) => {\r\n  await firestore.collection(\"restaurants\").doc(id).delete();\r\n};\r\nexport const getRestaurantUserReviews = async (id) => {\r\n  const res = await firestore\r\n    .collection(\"restaurant_reviews\")\r\n    .doc(id)\r\n    .collection(\"user_reviews\")\r\n    .get();\r\n  let reviews = [];\r\n  res.docs.map((rest) => {\r\n    reviews.push({ ...rest.data() });\r\n  });\r\n  return reviews;\r\n};\r\nexport const getRestaurants = async (id) => {\r\n  const res = await firestore.collection(\"restaurants\").get();\r\n  let restaurants = [];\r\n  res.docs.map((rest) => {\r\n    restaurants.push({ ...rest.data() });\r\n  });\r\n  return restaurants;\r\n};\r\nexport const createCategory = async (name) => {\r\n  const documentRef = firestore.collection(\"categories\").doc();\r\n  const data = {\r\n    name,\r\n    uid: documentRef.id,\r\n  };\r\n  await documentRef.set(data);\r\n};\r\n\r\nexport const getCategories = async () => {\r\n  const res = await firestore.collection(\"categories\").get();\r\n  let categories = [];\r\n  res.docs.map((category) => {\r\n    categories.push({ ...category.data() });\r\n  });\r\n  return categories;\r\n};\r\n\r\nexport const deleteCategory = async (id) => {\r\n  firestore.collection(\"categories\").doc(id).delete();\r\n};\r\n\r\nexport const createDish = async (\r\n  imageFile,\r\n  name,\r\n  description,\r\n  discount_price,\r\n  price,\r\n  ingredient,\r\n  menu,\r\n  restaurant\r\n) => {\r\n  const image = await uploadDishImage(imageFile);\r\n  const documentRef = firestore.collection(\"dishes\").doc();\r\n  const data = {\r\n    image,\r\n    name,\r\n    description,\r\n    discount_price,\r\n    price,\r\n    ingredient,\r\n    menu,\r\n    restaurant,\r\n    id: documentRef.id,\r\n    owner_id: \"any\",\r\n  };\r\n\r\n  const dish = await documentRef.set(data);\r\n\r\n  return dish;\r\n};\r\n\r\nexport const editDish = async (\r\n  id,\r\n  imageUrl,\r\n  imageFile,\r\n  name,\r\n  description,\r\n  discount_price,\r\n  price,\r\n  ingredient,\r\n  menu,\r\n  restaurant\r\n) => {\r\n  let image = imageUrl;\r\n  if (imageFile !== null) {\r\n    image = await uploadDishImage(imageFile);\r\n  }\r\n  const documentRef = firestore.collection(\"dishes\").doc(id);\r\n  const data = {\r\n    image,\r\n    name,\r\n    description,\r\n    discount_price,\r\n    price,\r\n    ingredient,\r\n    menu,\r\n    restaurant,\r\n    id,\r\n  };\r\n\r\n  const dish = await documentRef.update(data);\r\n\r\n  return dish;\r\n};\r\n\r\nexport const getDish = async (id) => {\r\n  const dish = await firestore.collection(\"dishes\").doc(id).get();\r\n  return dish.data();\r\n};\r\n\r\nexport const deleteDish = async (id) => {\r\n  firestore.collection(\"dishes\").doc(id).delete();\r\n};\r\n\r\nexport const getOrders = async () => {\r\n  const res = await firestore.collection(\"orders\").get();\r\n  let orders = [];\r\n  res.docs.map((order) => {\r\n    orders.push({ ...order.data() });\r\n  });\r\n  return orders;\r\n};\r\n\r\nexport const getDishes = async () => {\r\n  const res = await firestore.collection(\"dishes\").get();\r\n  let dishes = [];\r\n  res.docs.map((dish) => {\r\n    dishes.push({ ...dish.data() });\r\n  });\r\n  return dishes;\r\n};\r\n\r\nexport const getRestaurantOwners = async () => {\r\n  const res = await firestore.collection(\"admin\").get();\r\n  let owners = [];\r\n  res.docs.map((owner) => {\r\n    owners.push({ ...owner.data() });\r\n  });\r\n  return owners;\r\n};\r\n\r\nconst registerOwnerEmail = async (email, password) => {\r\n  const user = await auth.createUserWithEmailAndPassword(email, password);\r\n  return user;\r\n};\r\n\r\nexport const createRestaurantOwner = async (\r\n  image,\r\n  first_name,\r\n  last_name,\r\n  phone,\r\n  email,\r\n  password\r\n) => {\r\n  await registerOwnerEmail(email, password);\r\n  const profile_image = await uploadRestaurantOwnerImage(image);\r\n  const documentRef = firestore.collection(\"admin\").doc();\r\n  const data = {\r\n    profile_image,\r\n    first_name,\r\n    last_name,\r\n    phone,\r\n    email,\r\n    user_id: documentRef.id,\r\n    data_uploaded: true,\r\n  };\r\n\r\n  const restaurant = await documentRef.set(data);\r\n\r\n  return restaurant;\r\n};\r\n","E:\\food-delivery-admin\\src\\Components\\Dishes\\Dishes.js",["154","155","156"],"import React, { Component } from \"react\";\r\nimport { firestore } from \"../../Firebase/FirebaseConfig\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport { deleteDish } from \"../Common/Firebase\";\r\n\r\nclass Dishes extends Component {\r\n  state = {\r\n    dishes: [],\r\n    restaurents: [],\r\n    restaurent: null,\r\n    loading: true,\r\n    name: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    firestore\r\n      .collection(\"dishes\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.docs.length > 0) {\r\n          let dishes = [];\r\n          snapshot.docs.map((dish) => {\r\n            dishes.push({ uid: dish.id, ...dish.data() });\r\n          });\r\n          this.setState({ dishes });\r\n        }\r\n        firestore\r\n          .collection(\"restaurants\")\r\n          .get()\r\n          .then((snapshot) => {\r\n            let restaurents = [];\r\n            snapshot.docs.map((rest) => {\r\n              restaurents.push({ uid: rest.id, ...rest.data() });\r\n            });\r\n            this.setState({ restaurents, loading: false });\r\n          })\r\n          .catch((err) => {\r\n            this.setState({ loading: false });\r\n            alert(err.message);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n        alert(err.message);\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      restaurent: e.target.value,\r\n    });\r\n  };\r\n\r\n  dishClicked = (id) => {\r\n    this.props.history.push(`/dish/${id}`);\r\n  };\r\n  delete = async (id) => {\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      await deleteDish(id);\r\n      const dishes = this.state.dishes.filter((dish) => dish.id !== id);\r\n      this.setState({\r\n        dishes,\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ loading: false });\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  editDish = (id) => {\r\n    this.props.history.push(`/edit_dish/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { dishes: allDishes, restaurent, name } = this.state;\r\n\r\n    let filterdDishes = allDishes;\r\n    if (restaurent) {\r\n      filterdDishes = allDishes.filter(\r\n        (dish) => dish.restaurant === restaurent\r\n      );\r\n    }\r\n\r\n    if (name) {\r\n      const searchedDishes = filterdDishes.filter(\r\n        (dish) =>\r\n          dish.name &&\r\n          dish.name.toLowerCase().includes(this.state.name.toLowerCase(), 0)\r\n      );\r\n      filterdDishes = searchedDishes;\r\n    }\r\n\r\n    return (\r\n      <Sidebar>\r\n        {this.state.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <button className=\"add__restaurant__button\">\r\n              <Link to=\"/dishes/add\">Add Dish</Link>\r\n            </button>\r\n            <div className=\"form-group row mt-3 px-2\">\r\n              <label\r\n                htmlFor=\"inputPassword\"\r\n                className=\"col-sm-2 col-form-label\"\r\n              >\r\n                Select Resturant:\r\n              </label>\r\n              <div className=\"col-sm-10\">\r\n                <select\r\n                  name=\"restaurent\"\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control\"\r\n                >\r\n                  {\" \"}\r\n                  <option>Search Restaurant</option>\r\n                  {this.state.restaurents.map((e) => (\r\n                    <option value={e.uid}>{e.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row mt-3 px-2\">\r\n              <label\r\n                htmlFor=\"inputPassword\"\r\n                className=\"col-sm-2 col-form-label\"\r\n              >\r\n                Search Dish:\r\n              </label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  name=\"restaurent\"\r\n                  onChange={(e) => this.setState({ name: e.target.value })}\r\n                  placeholder=\"Search Dish By Name\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {filterdDishes.map((dish) => {\r\n              return (\r\n                <div key={dish.id} className=\"restaurant__list__item\">\r\n                  <span onClick={() => this.dishClicked(dish.id)}>\r\n                    <img src={dish.image} />\r\n\r\n                    <div className=\"row justify-content-between px-4 mb-3 mt-1\">\r\n                      <h3 className=\"pl-1 pt-1\">{dish.name}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"row justify-content-between px-4\">\r\n                      <p>{dish.description}</p>\r\n\r\n                      <p>{dish.price}</p>\r\n                    </div>\r\n                  </span>\r\n\r\n                  <div className=\"row justify-content-between px-4 mb-3 mt-1\">\r\n                    <button\r\n                      className=\"btn btn-success\"\r\n                      onClick={() => this.editDish(dish.id)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => this.delete(dish.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dishes);\r\n","E:\\food-delivery-admin\\src\\Components\\Dishes\\Dish.js",["157","158","159"],"import React, { Component } from \"react\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport { firestore } from \"../../Firebase/FirebaseConfig\";\r\nimport Rating from \"../Common/Rating\";\r\n\r\nclass Dish extends Component {\r\n  state = { dish: null, loading: true, user_reviews: [], restaurant: null };\r\n  componentDidMount() {\r\n    firestore\r\n      .collection(\"dishes\")\r\n      .doc(this.props.match.params.id)\r\n      .get()\r\n      .then((snapshot) => {\r\n        this.setState({\r\n          dish: { uid: snapshot.id, ...snapshot.data() },\r\n        });\r\n        firestore\r\n          .collection(\"dish_reviews\")\r\n          .doc(snapshot.id)\r\n          .collection(\"user_reviews\")\r\n          .get()\r\n          .then((snapshot) => {\r\n            let reviews = [];\r\n            snapshot.docs.map((rev) => {\r\n              reviews.push({ uid: rev.id, ...rev.data() });\r\n            });\r\n            this.setState({ user_reviews: reviews });\r\n          })\r\n          .catch((err) => {\r\n            this.setState({ loading: false });\r\n            alert(err.message);\r\n          });\r\n        firestore\r\n          .collection(\"restaurants\")\r\n          .doc(snapshot.data().restaurant)\r\n          .get()\r\n          .then((snapshot) => {\r\n            this.setState({ restaurant: snapshot.data(), loading: false });\r\n          })\r\n          .catch((err) => {\r\n            this.setState({ loading: false });\r\n            alert(err.message);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false });\r\n        alert(err.message);\r\n      });\r\n  }\r\n\r\n  getRating = () => {\r\n    let totalRating = 0;\r\n    let totalprdrating = 0;\r\n    const { user_reviews } = this.state;\r\n    user_reviews.length > 0 &&\r\n      user_reviews.map((rat, i) => {\r\n        totalprdrating = i + 1;\r\n        return (totalRating = totalRating + parseFloat(rat.stars));\r\n      });\r\n\r\n    if ((totalRating / totalprdrating).toString() === \"NaN\") {\r\n      return 0;\r\n    } else {\r\n      return totalRating / totalprdrating;\r\n    }\r\n  };\r\n\r\n  rendorReviews = () => {\r\n    const { user_reviews } = this.state;\r\n    return user_reviews.length > 0 ? (\r\n      user_reviews.map((rev) => (\r\n        <div>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"singal__review\">\r\n              <div className=\"d-flex\">\r\n                <img src={rev.user_image} />\r\n                <h5 className=\"p-2 font-weight-bold\">{rev.user_name}</h5>\r\n              </div>\r\n\r\n              <p>{rev.review}</p>\r\n            </div>\r\n            <p>\r\n              <span className=\"badge badge-dark\">\r\n                {rev.stars} <i className=\"fa fa-star\"></i>\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <h5 className=\"d-flex justify-content-center align-items-center\">\r\n        <span>There is no reviews</span>\r\n      </h5>\r\n    );\r\n  };\r\n  render() {\r\n    const { loading, dish, restaurant } = this.state;\r\n    return (\r\n      <Sidebar>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className=\"singal__restaurant mb-5\">\r\n            <img src={dish.image} />\r\n            <Rating productRating={this.getRating()} />\r\n            <div className=\"d-flex justify-content-between align-items-center  mt-5\">\r\n              <div className=\"d-flex align-items-center \">\r\n                <i className=\"fa fa-utensils\" style={{ fontSize: \"25px\" }}></i>\r\n                <h3 className=\"pl-4 pt-2\">{dish.name}</h3>\r\n              </div>\r\n\r\n              <div>\r\n                <p>{dish.price}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <p>{dish.description}</p>\r\n\r\n            <div className=\"d-flex align-items-center  mt-5\">\r\n              <i className=\"fa fa-star\" style={{ fontSize: \"25px\" }}></i>\r\n              <h3 className=\"pl-4 pt-1\">Ingardients</h3>\r\n            </div>\r\n            <p>{dish.ingredient}</p>\r\n\r\n            <div className=\"d-flex align-items-center  mt-5\">\r\n              <i className=\"fa fa-info-circle\" style={{ fontSize: \"25px\" }}></i>\r\n              <h3 className=\"pl-4 pt-1\">Information</h3>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h6>\r\n                Restaurant Name:{\" \"}\r\n                {restaurant ? restaurant.name : \"Vendor Deleted\"}\r\n              </h6>\r\n              <h6>Category: {dish.menu}</h6>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <h5 className=\"font-weight-bold\">\r\n                Phone: {restaurant ? restaurant.phone : \"Vendor Deleted\"}\r\n              </h5>\r\n              <h5 className=\"font-weight-bold\">\r\n                Mobile Phone:{\" \"}\r\n                {restaurant ? restaurant.mobile_phone : \"Vendor Deleted\"}\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center mt-5\">\r\n              <i\r\n                className=\"fa fa-star-half-alt\"\r\n                style={{ fontSize: \"25px\" }}\r\n              ></i>\r\n              <h3 className=\"pl-4 pt-1\">Reviews</h3>\r\n            </div>\r\n            {this.rendorReviews()}\r\n          </div>\r\n        )}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dish);\r\n","E:\\food-delivery-admin\\src\\Components\\Categories\\Categories.js",[],"E:\\food-delivery-admin\\src\\Components\\Dishes\\AddDish.js",["160"],"import React, { Component } from \"react\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport profileImage from \"../../Assets/placeholder.png\";\r\nimport Input from \"../Common/Input\";\r\nimport Joi from \"joi\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { createDish, getCategories, getRestaurants } from \"../Common/Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass AddDish extends Component {\r\n  state = {\r\n    loading: false,\r\n    image: null,\r\n    src: null,\r\n    name: \"\",\r\n    price: \"\",\r\n    ingredient: \"\",\r\n    menu: \"\",\r\n    discount_price: \"\",\r\n    description: \"\",\r\n    restaurant: \"\",\r\n    categories: [],\r\n    restaurants: [],\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const categories = await getCategories();\r\n      const restaurants = await getRestaurants();\r\n\r\n      this.setState({\r\n        categories,\r\n        restaurants,\r\n      });\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  }\r\n\r\n  fileInputHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  dishSchema = {\r\n    name: Joi.string().required(),\r\n    description: Joi.string().required(),\r\n    discount_price: Joi.string().required(),\r\n    price: Joi.string().required(),\r\n    ingredient: Joi.string().required(),\r\n    menu: Joi.string().required(),\r\n    restaurant: Joi.string().required(),\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const propertySchema = { [name]: this.dishSchema[name] };\r\n    const { error } = Joi.object(propertySchema).validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  inputHandler = (e) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(e.target);\r\n    if (errorMessage) {\r\n      errors[e.target.name] = errorMessage;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      errors,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    const {\r\n      name,\r\n      description,\r\n      discount_price,\r\n      price,\r\n      ingredient,\r\n      restaurant,\r\n      menu,\r\n    } = this.state;\r\n    const dishData = {\r\n      name,\r\n      description,\r\n      discount_price,\r\n      price,\r\n      ingredient,\r\n      restaurant,\r\n      menu,\r\n    };\r\n    const result = Joi.object(this.dishSchema).validate(dishData, {\r\n      abortEarly: false,\r\n    });\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  create = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    if (this.state.image === null) {\r\n      alert(\"Please select an image.\");\r\n    } else {\r\n      const {\r\n        image,\r\n        name,\r\n        description,\r\n        discount_price,\r\n        price,\r\n        ingredient,\r\n        menu,\r\n        restaurant,\r\n      } = this.state;\r\n      try {\r\n        this.setState({ loading: true });\r\n        await createDish(\r\n          image,\r\n          name,\r\n          description,\r\n          discount_price,\r\n          price,\r\n          ingredient,\r\n          menu,\r\n          restaurant\r\n        );\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        this.props.history.push(\"/dishes\");\r\n      } catch (error) {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Sidebar>\r\n        <div>\r\n          {this.state.loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <div className=\"vendor-card\">\r\n              <div className=\"vendor-card-header\">\r\n                <h5>Add New Dish</h5>\r\n              </div>\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={this.state.src ? this.state.src : profileImage}\r\n                  ></img>\r\n                </div>\r\n                <div className=\"form-group mt-2\">\r\n                  <input\r\n                    className=\"btn btn-primary\"\r\n                    name=\"image\"\r\n                    accept=\"image/*\"\r\n                    onChange={this.fileInputHandler}\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Input\r\n                name=\"name\"\r\n                label=\"Dish Name\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.name}\r\n                type=\"text\"\r\n                placeholder=\"Enter Dish Name\"\r\n              />\r\n              <div className=\"form-group row my-2\">\r\n                <label\r\n                  htmlFor=\"inputPassword\"\r\n                  className=\"col-sm-2 col-form-label\"\r\n                >\r\n                  Select Resturant:\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <select\r\n                    name=\"restaurant\"\r\n                    onChange={this.inputHandler}\r\n                    className=\"form-control\"\r\n                  >\r\n                    {\" \"}\r\n                    <option>Search Restaurant</option>\r\n                    {this.state.restaurants.map((e) => (\r\n                      <option value={e.restaurant_id} key={e.restaurant_id}>\r\n                        {e.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.state.errors.restaurant && (\r\n                  <span className=\"error-message\">\r\n                    {this.state.errors.restaurant}\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              <Input\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.price}\r\n                type=\"number\"\r\n                placeholder=\"Enter Price of Dish.\"\r\n              />\r\n              <Input\r\n                name=\"discount_price\"\r\n                label=\"Discount Price\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.discount_price}\r\n                type=\"number\"\r\n                placeholder=\"Enter Discount Price\"\r\n              />\r\n              <Input\r\n                name=\"ingredient\"\r\n                label=\"Ingradients\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.ingredient}\r\n                type=\"text\"\r\n                placeholder=\"Enter Ingradients\"\r\n              />\r\n              <div className=\"form-group row my-2\">\r\n                <label\r\n                  htmlFor=\"inputPassword\"\r\n                  className=\"col-sm-2 col-form-label\"\r\n                >\r\n                  Select Menu:\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <select\r\n                    name=\"menu\"\r\n                    onChange={this.inputHandler}\r\n                    className=\"form-control\"\r\n                  >\r\n                    {\" \"}\r\n                    <option>Search Menu</option>\r\n                    {this.state.categories.map((e) => (\r\n                      <option value={e.name} key={e.name}>\r\n                        {e.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.state.errors.ingredient && (\r\n                  <span className=\"error-message\">\r\n                    {this.state.errors.ingredient}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <Input\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.description}\r\n                type=\"text\"\r\n                placeholder=\"Description\"\r\n              />\r\n\r\n              <div className=\"btn-submit\">\r\n                <button onClick={this.create}>Save</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddDish);\r\n","E:\\food-delivery-admin\\src\\Components\\Dishes\\EditDish.js",["161"],"import React, { Component } from \"react\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport profileImage from \"../../Assets/placeholder.png\";\r\nimport Input from \"../Common/Input\";\r\nimport Joi from \"joi\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport {\r\n  editDish,\r\n  getCategories,\r\n  getDish,\r\n  getRestaurants,\r\n} from \"../Common/Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass EditDish extends Component {\r\n  state = {\r\n    loading: false,\r\n    data: {\r\n      id: \"\",\r\n      image: null,\r\n      src: null,\r\n      name: \"\",\r\n      price: \"\",\r\n      ingredient: \"\",\r\n      menu: \"\",\r\n      discount_price: \"\",\r\n      description: \"\",\r\n      restaurant: \"\",\r\n    },\r\n    categories: [],\r\n    restaurants: [],\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const dish = await getDish(this.props.match.params.id);\r\n      const categories = await getCategories();\r\n      const restaurants = await getRestaurants();\r\n\r\n      const data = { ...this.state.data };\r\n      data.id = dish.id;\r\n      data.src = dish.image;\r\n      data.name = dish.name;\r\n      data.price = dish.price;\r\n      data.ingredient = dish.ingredient;\r\n      data.menu = dish.menu;\r\n      data.restaurant = dish.restaurant;\r\n      data.discount_price = dish.discount_price;\r\n      data.description = dish.description;\r\n\r\n      this.setState({\r\n        categories,\r\n        restaurants,\r\n        data,\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      alert(error.message);\r\n    }\r\n  }\r\n\r\n  fileInputHandler = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        const dish = { ...this.state.data };\r\n        dish.src = reader.result;\r\n        dish.image = e.target.files[0];\r\n        this.setState({ data: dish });\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  dishSchema = {\r\n    name: Joi.string().required(),\r\n    description: Joi.string().required(),\r\n    discount_price: Joi.string().required(),\r\n    price: Joi.string().required(),\r\n    ingredient: Joi.string().required(),\r\n    menu: Joi.string().required(),\r\n    restaurant: Joi.string().required(),\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const propertySchema = { [name]: this.dishSchema[name] };\r\n    const { error } = Joi.object(propertySchema).validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  inputHandler = (e) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(e.target);\r\n    if (errorMessage) {\r\n      errors[e.target.name] = errorMessage;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n    let dish = { ...this.state.data };\r\n    dish[e.target.name] = e.target.value;\r\n    this.setState({\r\n      data: dish,\r\n      errors,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    const {\r\n      name,\r\n      description,\r\n      discount_price,\r\n      price,\r\n      ingredient,\r\n      menu,\r\n      restaurant,\r\n    } = this.state.data;\r\n    const dishData = {\r\n      name,\r\n      description,\r\n      discount_price,\r\n      price,\r\n      ingredient,\r\n      menu,\r\n      restaurant,\r\n    };\r\n    const result = Joi.object(this.dishSchema).validate(dishData, {\r\n      abortEarly: false,\r\n    });\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  editDishData = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    if (this.state.image === null) {\r\n      alert(\"Please select an image.\");\r\n    } else {\r\n      const {\r\n        id,\r\n        src,\r\n        image,\r\n        name,\r\n        description,\r\n        discount_price,\r\n        price,\r\n        ingredient,\r\n        menu,\r\n        restaurant,\r\n      } = this.state.data;\r\n      try {\r\n        this.setState({ loading: true });\r\n        await editDish(\r\n          id,\r\n          src,\r\n          image,\r\n          name,\r\n          description,\r\n          discount_price,\r\n          price,\r\n          ingredient,\r\n          menu,\r\n          restaurant\r\n        );\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        this.props.history.push(\"/dishes\");\r\n      } catch (error) {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Sidebar>\r\n        <div>\r\n          {this.state.loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <div className=\"vendor-card\">\r\n              <div className=\"vendor-card-header\">\r\n                <h5>Add New Dish</h5>\r\n              </div>\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={\r\n                      this.state.data.src ? this.state.data.src : profileImage\r\n                    }\r\n                  ></img>\r\n                </div>\r\n                <div className=\"form-group mt-2\">\r\n                  <input\r\n                    className=\"btn btn-primary\"\r\n                    name=\"image\"\r\n                    accept=\"image/*\"\r\n                    onChange={this.fileInputHandler}\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Input\r\n                name=\"name\"\r\n                label=\"Dish Name\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.name}\r\n                value={this.state.data.name}\r\n                type=\"text\"\r\n                placeholder=\"Enter Dish Name\"\r\n              />\r\n              <div className=\"form-group row my-2\">\r\n                <label\r\n                  htmlFor=\"inputPassword\"\r\n                  className=\"col-sm-2 col-form-label\"\r\n                >\r\n                  Select Resturant:\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <select\r\n                    name=\"restaurant\"\r\n                    onChange={this.inputHandler}\r\n                    className=\"form-control\"\r\n                  >\r\n                    {\" \"}\r\n                    <option>Search Restaurant</option>\r\n                    {this.state.restaurants.map((e) => (\r\n                      <option value={e.restaurant_id} key={e.restaurant_id}>\r\n                        {e.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.state.errors.restaurant && (\r\n                  <span className=\"error-message\">\r\n                    {this.state.errors.restaurant}\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              <Input\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.price}\r\n                value={this.state.data.price}\r\n                type=\"number\"\r\n                placeholder=\"Enter Price of Dish.\"\r\n              />\r\n              <Input\r\n                name=\"discount_price\"\r\n                label=\"Discount Price\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.discount_price}\r\n                value={this.state.data.discount_price}\r\n                type=\"number\"\r\n                placeholder=\"Enter Discount Price\"\r\n              />\r\n              <Input\r\n                name=\"ingredient\"\r\n                label=\"Ingredient\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.ingredient}\r\n                value={this.state.data.ingredient}\r\n                type=\"text\"\r\n                placeholder=\"Enter Ingradient\"\r\n              />\r\n              <div className=\"form-group row my-2\">\r\n                <label\r\n                  htmlFor=\"inputPassword\"\r\n                  className=\"col-sm-2 col-form-label\"\r\n                >\r\n                  Select Menu:\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <select\r\n                    name=\"ingredient\"\r\n                    onChange={this.inputHandler}\r\n                    className=\"form-control\"\r\n                  >\r\n                    {\" \"}\r\n                    <option>Search Menu</option>\r\n                    {this.state.categories.map((e) => (\r\n                      <option value={e.name} key={e.name}>\r\n                        {e.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.state.errors.ingredient && (\r\n                  <span className=\"error-message\">\r\n                    {this.state.errors.ingredient}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <Input\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.description}\r\n                value={this.state.data.description}\r\n                type=\"text\"\r\n                placeholder=\"Description\"\r\n              />\r\n\r\n              <div className=\"btn-submit\">\r\n                <button onClick={this.editDishData}>Save Changes</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditDish);\r\n","E:\\food-delivery-admin\\src\\Components\\Dashboard\\Dashboard.js",["162","163"],"import React, { Component } from \"react\";\r\nimport { getDishes, getOrders, getRestaurants } from \"../Common/Firebase\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  LineChart,\r\n  Line,\r\n} from \"recharts\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    loading: false,\r\n    orders: [],\r\n    restaurants: 0,\r\n    dishes: 0,\r\n  };\r\n\r\n  getEarnings = (orders) => {\r\n    let total = 0;\r\n    orders.map((order) => {\r\n      total = total + parseInt(order.total_price);\r\n    });\r\n\r\n    return total;\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ loading: true });\r\n    try {\r\n      const orders = await getOrders();\r\n      const rest = await getRestaurants();\r\n      const dishes = await getDishes();\r\n      this.setState({\r\n        orders,\r\n        restaurants: rest.length,\r\n        dishes: dishes.length,\r\n        loading: false,\r\n      });\r\n    } catch (error) {\r\n      this.setState({ loading: false });\r\n      alert(error.message);\r\n    }\r\n  }\r\n  render() {\r\n    const monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let monthlyRevenue = [];\r\n\r\n    this.state.orders.forEach((order) => {\r\n      const orderDate = new Date(order.date);\r\n\r\n      const index = monthlyRevenue.findIndex((e) => {\r\n        return (\r\n          e.name ==\r\n          monthNames[orderDate.getMonth()] + \" \" + orderDate.getFullYear()\r\n        );\r\n      });\r\n\r\n      if (index >= 0) {\r\n        monthlyRevenue[index][\"Revenu\"] =\r\n          monthlyRevenue[index][\"Revenu\"] + parseInt(order.total_price);\r\n      } else {\r\n        monthlyRevenue.push({\r\n          name:\r\n            monthNames[orderDate.getMonth()] + \" \" + orderDate.getFullYear(),\r\n          Revenu: parseInt(order.total_price),\r\n        });\r\n      }\r\n    });\r\n    return (\r\n      <Sidebar>\r\n        {this.state.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className=\"container\">\r\n            <div className=\"text-center my-5\">\r\n              <h2>Dashboard</h2>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 text-center\">\r\n                <div className=\"card d-flex justify-content-center align-items-center py-5  my-1\">\r\n                  <p className=\"font-weight-bold\">\r\n                    $ {this.getEarnings(this.state.orders)}\r\n                  </p>\r\n                  <span>Total Earnings</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 text-center\">\r\n                <div className=\"card d-flex justify-content-center align-items-center py-5 my-1\">\r\n                  <p className=\"font-weight-bold\">{this.state.orders.length}</p>\r\n                  <span>Orders</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 text-center\">\r\n                <div className=\"card d-flex justify-content-center align-items-center py-5  my-1\">\r\n                  <p className=\"font-weight-bold\">{this.state.restaurants}</p>\r\n                  <span>Total Restaurants</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 text-center\">\r\n                <div className=\"card d-flex justify-content-center align-items-center py-5 my-1\">\r\n                  <p className=\"font-weight-bold\">{this.state.dishes}</p>\r\n                  <span>Total Dishes</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"my-3 text-center\">\r\n              <h3 className=\"my-2\">Total Revenue</h3>\r\n            \r\n              <LineChart\r\n                width={900}\r\n                height={400}\r\n                data={monthlyRevenue}\r\n                margin={{\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"Revenu\"\r\n                  stroke=\"#82ca9d\"\r\n                  activeDot={{ r: 10 }}\r\n                />\r\n                <Legend margin={{ top: 40 }} />\r\n              </LineChart>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","E:\\food-delivery-admin\\src\\Components\\Notifications\\Notifications.js",[],"E:\\food-delivery-admin\\src\\Components\\RestaurantOwners\\RestaurantOwners.js",["164"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport { getRestaurantOwners } from \"./../Common/Firebase\";\r\n\r\nclass RestaurantOwners extends Component {\r\n  state = { loading: false, firstName: \"\", owners: [] };\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const restaurantOwners = await getRestaurantOwners();\r\n      this.setState({\r\n        loading: false,\r\n        owners: restaurantOwners,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      alert(error.message);\r\n    }\r\n  }\r\n\r\n  createRestaurantOwner = () => {\r\n    this.props.history.push(\"/restaurant-owners/add\");\r\n  };\r\n  render() {\r\n    const { loading, owners, firstName } = this.state;\r\n    let filterRestaurantOwners = owners;\r\n\r\n    if (firstName !== \"\") {\r\n      filterRestaurantOwners = owners.filter(\r\n        (owner) =>\r\n          owner.first_name &&\r\n          owner.first_name\r\n            .toLowerCase()\r\n            .includes(this.state.firstName.toLowerCase(), 0)\r\n      );\r\n    }\r\n    return (\r\n      <Sidebar>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group row my-5\">\r\n              <label\r\n                htmlFor=\"inputPassword\"\r\n                className=\"col-sm-2 col-form-label\"\r\n              >\r\n                Search Owner:\r\n              </label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  name=\"restaurent\"\r\n                  onChange={(e) => this.setState({ firstName: e.target.value })}\r\n                  placeholder=\"Search Owner By First Name\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-outline-primary btn-block mb-3\"\r\n                onClick={this.createRestaurantOwner}\r\n              >\r\n                Create Restaurant Owner\r\n              </button>\r\n            </div>\r\n            <table className=\"responsive__table mb-5\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Image</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Phone</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filterRestaurantOwners.map((owner) => {\r\n                  return (\r\n                    <>\r\n                      <tr className=\"table-list-item\">\r\n                        <td data-label=\"Image\">\r\n                          <img\r\n                            style={{\r\n                              width: 40,\r\n                              height: 40,\r\n                              borderRadius: 50,\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                            src={owner.profile_image}\r\n                          ></img>\r\n                        </td>\r\n                        <td data-label=\"Name\">\r\n                          {owner.first_name + \" \" + owner.last_name}\r\n                        </td>\r\n                        <td data-label=\"Email\" className=\"control-text\">\r\n                          {owner.email}\r\n                        </td>\r\n                        <td data-label=\"Email\" className=\"control-text\">\r\n                          {owner.phone}\r\n                        </td>\r\n                      </tr>\r\n                    </>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RestaurantOwners);\r\n","E:\\food-delivery-admin\\src\\Components\\RestaurantOwners\\AddRestaurantOwner.js",["165"],"import React, { Component } from \"react\";\r\nimport Spinner from \"../Common/Spinner\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport profileImage from \"../../Assets/profile.png\";\r\nimport Input from \"../Common/Input\";\r\nimport Joi from \"joi\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { createRestaurantOwner} from \"../Common/Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass AddRestaurantOwner extends Component {\r\n  state = {\r\n    loading: false,\r\n    image: null,\r\n    src: null,\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  fileInputHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  ownerSchema = {\r\n    first_name: Joi.string().required(),\r\n    last_name: Joi.string().required(),\r\n    phone: Joi.string().required(),\r\n    email: Joi.string().required(),\r\n    password: Joi.string().min(6).required(),\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const propertySchema = { [name]: this.ownerSchema[name] };\r\n    const { error } = Joi.object(propertySchema).validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n  inputHandler = (e) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(e.target);\r\n    if (errorMessage) {\r\n      errors[e.target.name] = errorMessage;\r\n    } else {\r\n      delete errors[e.target.name];\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      errors,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    const { first_name, last_name, phone, email, password } = this.state;\r\n    const ownerData = {\r\n      first_name,\r\n      last_name,\r\n      phone,\r\n      email,\r\n      password,\r\n    };\r\n    const result = Joi.object(this.ownerSchema).validate(ownerData, {\r\n      abortEarly: false,\r\n    });\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  create = async (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n\r\n    if (this.state.image === null) {\r\n      alert(\"Please select an image.\");\r\n    } else {\r\n      const {\r\n        image,\r\n        first_name,\r\n        last_name,\r\n        phone,\r\n        email,\r\n        password,\r\n      } = this.state;\r\n      try {\r\n        this.setState({ loading: true });\r\n        await createRestaurantOwner(\r\n          image,\r\n          first_name,\r\n          last_name,\r\n          phone,\r\n          email,\r\n          password,\r\n        );\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        this.props.history.push(\"/restaurant-owners\");\r\n      } catch (error) {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Sidebar>\r\n        <div>\r\n          {this.state.loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <div className=\"vendor-card\">\r\n              <div className=\"vendor-card-header\">\r\n                <h5>Create New Restaurant Owner</h5>\r\n              </div>\r\n              <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={this.state.src ? this.state.src : profileImage}\r\n                  ></img>\r\n                </div>\r\n                <div className=\"form-group mt-2\">\r\n                  <input\r\n                    className=\"btn btn-primary\"\r\n                    name=\"image\"\r\n                    accept=\"image/*\"\r\n                    onChange={this.fileInputHandler}\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Input\r\n                name=\"first_name\"\r\n                label=\"First Name\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.first_name}\r\n                type=\"text\"\r\n                placeholder=\"Enter First Name\"\r\n              />\r\n              <Input\r\n                name=\"last_name\"\r\n                label=\"Last Name\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.last_name}\r\n                type=\"text\"\r\n                placeholder=\"Enter Last Name\"\r\n              />\r\n\r\n              <Input\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.phone}\r\n                type=\"number\"\r\n                placeholder=\"Enter Phone Number\"\r\n              />\r\n              <Input\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.email}\r\n                type=\"email\"\r\n                placeholder=\"Enter Your Email\"\r\n              />\r\n              <Input\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                onChange={this.inputHandler}\r\n                error={this.state.errors.password}\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n              />\r\n              <div className=\"btn-submit\">\r\n                <button onClick={this.create}>Sumbit Registration</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddRestaurantOwner);\r\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":38,"column":13,"nodeType":"172","endLine":38,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":45,"column":17,"nodeType":"172","endLine":45,"endColumn":40},{"ruleId":"170","severity":1,"message":"171","line":61,"column":17,"nodeType":"172","endLine":61,"endColumn":43},{"ruleId":"173","severity":1,"message":"174","line":17,"column":37,"nodeType":"175","messageId":"176","endLine":17,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":28,"column":40,"nodeType":"175","messageId":"176","endLine":28,"endColumn":42},{"ruleId":"177","severity":1,"message":"178","line":5,"column":16,"nodeType":"179","messageId":"180","endLine":5,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":26,"column":17,"nodeType":"172","endLine":26,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":41,"column":15,"nodeType":"172","endLine":41,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":59,"column":15,"nodeType":"172","endLine":59,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":29,"column":23,"nodeType":"175","messageId":"176","endLine":29,"endColumn":25},{"ruleId":"170","severity":1,"message":"171","line":98,"column":25,"nodeType":"172","endLine":98,"endColumn":49},{"ruleId":"177","severity":1,"message":"181","line":4,"column":28,"nodeType":"179","messageId":"180","endLine":4,"endColumn":52},{"ruleId":"170","severity":1,"message":"171","line":101,"column":21,"nodeType":"172","endLine":101,"endColumn":51},{"ruleId":"173","severity":1,"message":"174","line":26,"column":37,"nodeType":"175","messageId":"176","endLine":26,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":41,"column":37,"nodeType":"175","messageId":"176","endLine":41,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":84,"column":19,"nodeType":"172","endLine":84,"endColumn":43},{"ruleId":"170","severity":1,"message":"171","line":113,"column":17,"nodeType":"172","endLine":113,"endColumn":45},{"ruleId":"170","severity":1,"message":"171","line":159,"column":13,"nodeType":"172","endLine":159,"endColumn":43},{"ruleId":"170","severity":1,"message":"171","line":189,"column":19,"nodeType":"172","endLine":191,"endColumn":20},{"ruleId":"166","replacedBy":"182"},{"ruleId":"168","replacedBy":"183"},{"ruleId":"170","severity":1,"message":"171","line":209,"column":19,"nodeType":"172","endLine":213,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":105,"column":23,"nodeType":"175","messageId":"176","endLine":105,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":113,"column":23,"nodeType":"175","messageId":"176","endLine":113,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":130,"column":27,"nodeType":"175","messageId":"176","endLine":130,"endColumn":29},{"ruleId":"173","severity":1,"message":"174","line":216,"column":24,"nodeType":"175","messageId":"176","endLine":216,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":225,"column":23,"nodeType":"175","messageId":"176","endLine":225,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":234,"column":24,"nodeType":"175","messageId":"176","endLine":234,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":24,"column":36,"nodeType":"175","messageId":"176","endLine":24,"endColumn":38},{"ruleId":"173","severity":1,"message":"174","line":34,"column":38,"nodeType":"175","messageId":"176","endLine":34,"endColumn":40},{"ruleId":"170","severity":1,"message":"171","line":149,"column":21,"nodeType":"172","endLine":149,"endColumn":45},{"ruleId":"173","severity":1,"message":"174","line":26,"column":37,"nodeType":"175","messageId":"176","endLine":26,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":78,"column":17,"nodeType":"172","endLine":78,"endColumn":45},{"ruleId":"170","severity":1,"message":"171","line":106,"column":13,"nodeType":"172","endLine":106,"endColumn":37},{"ruleId":"170","severity":1,"message":"171","line":172,"column":19,"nodeType":"172","endLine":174,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":206,"column":19,"nodeType":"172","endLine":210,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":26,"column":24,"nodeType":"175","messageId":"176","endLine":26,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":72,"column":18,"nodeType":"186","messageId":"187","endLine":72,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":89,"column":27,"nodeType":"172","endLine":97,"endColumn":28},{"ruleId":"170","severity":1,"message":"171","line":138,"column":19,"nodeType":"172","endLine":140,"endColumn":20},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'getRestaurantUserReviews' is defined but never used.",["188"],["189"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]